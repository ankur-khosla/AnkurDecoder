import java.util.ArrayList;
import java.util.List;

import javax.swing.event.ListDataEvent;

import hkjc.edap.*;

public class TestJar {

	public static void main(String[] args) {

		String binMsgStr
		String binMsgStr
		
		byte[] bMsg1 = hexStr2BinArr(binMsgStr);
		byte[] bMsg2 = hexStr2BinArr(binMsgStr2);
		
		List<byte[]> listBinMsg=new ArrayList();
		listBinMsg.add(bMsg1);
		listBinMsg.add(bMsg2);
		
		decoder de =new decoder();
		String[] msgStrings = de.DecodeABMsgs(listBinMsg);
		
		for(int i=0;i<msgStrings.length;i++)
		{
			//System.out.println("DecodeABMsgs return["+i+"] : " + msgStrings[i]);
			System.out.println(msgStrings[i]);
		}
	}
	
	private static byte[] hexStr2BinArr(String hexString) {
		int len = hexString.length() / 2;
		byte[] bytes = new byte[len];
		String h = "";
		for (int i = 0; i < len; i++) {

			h = hexString.substring(2 * i, 2 * i + 2);
			byte res = (byte) Integer.parseInt(h, 16);
			bytes[i] = res;
		}
		return bytes;
	}
}
